local placeId = game.PlaceId
local allowedPlaceId = 15092647980

if placeId ~= allowedPlaceId then
    return
end

Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Project Smash",
    SubTitle = "Made by NozerHub Latest Version!",
    TabWidth = 120,
    Size = UDim2.fromOffset(450, 300),
    Acrylic = true,
    Theme = "Darker",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Credits = Window:AddTab({ Title = "| Info", Icon = "scroll" }),
    Settings = Window:AddTab({ Title = "| Settings", Icon = "settings" }),
    AutoFarm = Window:AddTab({ Title = "| Farm", Icon = "swords" }),
    FarmSettings = Window:AddTab({ Title = "| Farm Settings", Icon = "sword" }),
    Misc = Window:AddTab({ Title = "| Misc", Icon = "list" })
}

local Options = Fluent.Options

Fluent:Notify({
    Title = "By Nozer Hub",
    Content = "Thanks for using the script!",
    Duration = 5
})

local SupportSection = Tabs.Credits:AddSection("Support")
Tabs.Credits:AddParagraph({
    Title = "Supported Devices",
    Content = "- Mobile\n- PC\n- Emulator"
})

local CreditsSection = Tabs.Credits:AddSection("Credits")
local linkParaCopiar = "https://www.youtube.com/@NozerHub"
Tabs.Credits:AddButton({
    Title = "Copy Link Channel",
    Callback = function()
        setclipboard(linkParaCopiar)
    end
})

local AntiAFKEnabled = true
local Toggle = Tabs.Misc:AddToggle("MyToggle", { Title = "Anti AFK", Default = true })

Toggle:OnChanged(function()
    AntiAFKEnabled = Options.MyToggle.Value
end)

Options.MyToggle:SetValue(true)

local VirtualUser = game:GetService("VirtualUser")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
LocalPlayer.Idled:Connect(function()
    if AntiAFKEnabled then
        VirtualUser:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
        task.wait(1)
        VirtualUser:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
    end
end)

local Toggle = Tabs.AutoFarm:AddToggle("AutoClickToggle", { Title = "Auto Attack", Default = false })

Toggle:OnChanged(function()
    while Toggle.Value do
        local timestamps = {
            1732810917.351294,
            1732810917.343646,
            1732810917.327868,
            1732810917.298889,
            1732810917.292552
        }
        for i, time in ipairs(timestamps) do
            local args = {
                [1] = i ~= 1,
                [2] = time
            }
            game:GetService("ReplicatedStorage")
                :WaitForChild("Remotes")
                :WaitForChild("game")
                :WaitForChild("action")
                :WaitForChild("mouse1")
                :FireServer(unpack(args))
        end
        wait(0.1)
    end
end)

local Toggle = Tabs.AutoFarm:AddToggle("AbilityToggle", { Title = "Auto Abilities", Default = false })

Toggle:OnChanged(function()
    while Toggle.Value do
        local args = {
            [1] = "One",
            [2] = true,
            [3] = {
                ["floorMaterial"] = Enum.Material.Plastic,
                ["mouseHit"] = Vector3.new(-497.68695068359375, -18.10104751586914, -59.15255355834961),
                ["lookVector"] = Vector3.new(0.9302381873130798, 2.487094141745416e-10, 0.3669562339782715),
                ["clientRootPos"] = Vector3.new(-496.3379211425781, -15.101049423217773, -73.46576690673828)
            },
            [4] = 1732811820.535552
        }

        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("game"):WaitForChild("action"):WaitForChild("ability"):FireServer(unpack(args))

        local args2 = {
            [1] = "Two",
            [2] = true,
            [3] = {
                ["floorMaterial"] = Enum.Material.Plastic,
                ["mouseHit"] = Vector3.new(-583.8018798828125, -17.10104751586914, -82.01797485351562),
                ["lookVector"] = Vector3.new(0.930898904800415, 4.338500048106653e-08, 0.36527693271636963),
                ["clientRootPos"] = Vector3.new(-584.9832153320312, -14.124750137329102, -109.4184799194336)
            },
            [4] = 1732811837.230325
        }

        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("game"):WaitForChild("action"):WaitForChild("ability"):FireServer(unpack(args2))

        local args3 = {
            [1] = "Three",
            [2] = true,
            [3] = {
                ["floorMaterial"] = Enum.Material.Plastic,
                ["mouseHit"] = Vector3.new(-571.3386840820312, -16.101036071777344, -76.50746154785156),
                ["lookVector"] = Vector3.new(0.9310272932052612, 9.911458676015172e-08, 0.3649495840072632),
                ["clientRootPos"] = Vector3.new(-569.747314453125, -14.101049423217773, -103.07154846191406)
            },
            [4] = 1732811870.065709
        }

        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("game"):WaitForChild("action"):WaitForChild("ability"):FireServer(unpack(args3))

        local args4 = {
            [1] = "Four",
            [2] = true,
            [3] = {
                ["floorMaterial"] = Enum.Material.Plastic,
                ["mouseHit"] = Vector3.new(-604.7683715820312, -17.10104751586914, -76.46967315673828),
                ["lookVector"] = Vector3.new(0.9310272932052612, -2.5674969705846706e-08, 0.36494961380958557),
                ["clientRootPos"] = Vector3.new(-599.132568359375, -14.101049423217773, -99.50162506103516)
            },
            [4] = 1732811874.993721
        }

        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("game"):WaitForChild("action"):WaitForChild("ability"):FireServer(unpack(args4))

        wait(0.5) -- Ajuste o intervalo conforme necessÃ¡rio
    end
end)

local Toggle = Tabs.AutoFarm:AddToggle("AutoFarmPlayerToggle", { 
    Title = "Kill Farm", 
    Default = false 
})

local AutoFarmEnabled = false
local currentTarget = nil

local function TeleportToPlayerBack(targetPlayer)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local targetCharacter = targetPlayer.Character
        local targetPosition = targetCharacter.HumanoidRootPart.Position
        local targetLookVector = targetCharacter.HumanoidRootPart.CFrame.LookVector

        if character then
            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
            if humanoidRootPart then
                local behindPosition = targetPosition - (targetLookVector * 2) + Vector3.new(0, 2, 0)
                humanoidRootPart.CFrame = CFrame.new(behindPosition)
            end
        end
    end
end

local function FindClosestPlayer()
    local closestPlayer = nil
    local closestDistance = math.huge

    for _, targetPlayer in pairs(game.Players:GetPlayers()) do
        if targetPlayer ~= game.Players.LocalPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Humanoid") and targetPlayer.Character.Humanoid.Health > 0 then
            local playerPosition = targetPlayer.Character.HumanoidRootPart.Position
            local localPlayerPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
            local distance = (playerPosition - localPlayerPosition).Magnitude

            if distance < closestDistance then
                closestDistance = distance
                closestPlayer = targetPlayer
            end
        end
    end

    return closestPlayer
end

local function StartAutoFarm()
    while AutoFarmEnabled do
        if currentTarget == nil or not currentTarget.Character or not game.Players:FindFirstChild(currentTarget.Name) or currentTarget.Character.Humanoid.Health <= 0 then
            currentTarget = FindClosestPlayer()
            if currentTarget then
                TeleportToPlayerBack(currentTarget)
            end
        end

        if currentTarget and currentTarget.Character and currentTarget.Character:FindFirstChild("HumanoidRootPart") then
            TeleportToPlayerBack(currentTarget)
        end

        wait(0.1)
    end
end

Toggle:OnChanged(function()
    AutoFarmEnabled = Toggle.Value

    if AutoFarmEnabled then
        currentTarget = FindClosestPlayer()
        if currentTarget then
            TeleportToPlayerBack(currentTarget)
        end
        StartAutoFarm()
    else
        currentTarget = nil
    end
end)

Toggle:SetValue(false)

local Dropdown = Tabs.FarmSettings:AddDropdown("Dropdown", {
    Title = "Select Player",
    Values = {},
    Multi = false,
    Default = 1,
})

local Toggle = Tabs.FarmSettings:AddToggle("AutoFarmPlayerToggle", { 
    Title = "Kill Farm", 
    Default = false 
})

local AutoFarmEnabled = false
local currentTarget = nil

local function TeleportToPlayerBack(targetPlayer)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local targetCharacter = targetPlayer.Character
        local targetPosition = targetCharacter.HumanoidRootPart.Position
        local targetLookVector = targetCharacter.HumanoidRootPart.CFrame.LookVector

        if character then
            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
            if humanoidRootPart then
                local behindPosition = targetPosition - (targetLookVector * 2) + Vector3.new(0, 2, 0)
                humanoidRootPart.CFrame = CFrame.new(behindPosition)
            end
        end
    end
end

local function FindClosestPlayer()
    local closestPlayer = nil
    local closestDistance = math.huge

    for _, targetPlayer in pairs(game.Players:GetPlayers()) do
        if targetPlayer ~= game.Players.LocalPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Humanoid") and targetPlayer.Character.Humanoid.Health > 0 then
            local playerPosition = targetPlayer.Character.HumanoidRootPart.Position
            local localPlayerPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
            local distance = (playerPosition - localPlayerPosition).Magnitude

            if distance < closestDistance then
                closestDistance = distance
                closestPlayer = targetPlayer
            end
        end
    end

    return closestPlayer
end

local function StartAutoFarm()
    while AutoFarmEnabled do
        if currentTarget == nil or not currentTarget.Character or not game.Players:FindFirstChild(currentTarget.Name) or currentTarget.Character.Humanoid.Health <= 0 then
            currentTarget = game.Players:FindFirstChild(Dropdown.Value)
            if currentTarget then
                TeleportToPlayerBack(currentTarget)
            end
        end

        if currentTarget and currentTarget.Character and currentTarget.Character:FindFirstChild("HumanoidRootPart") then
            TeleportToPlayerBack(currentTarget)
        end

        wait(0.1)
    end
end

Dropdown:OnChanged(function(Value)
    currentTarget = game.Players:FindFirstChild(Value)
end)

Toggle:OnChanged(function()
    AutoFarmEnabled = Toggle.Value

    if AutoFarmEnabled then
        if currentTarget then
            TeleportToPlayerBack(currentTarget)
        end
        StartAutoFarm()
    else
        currentTarget = nil
    end
end)

local function updatePlayerList()
    local playerNames = {}
    for _, player in pairs(game.Players:GetPlayers()) do
        if player.Name ~= game.Players.LocalPlayer.Name then
            table.insert(playerNames, player.Name)
        end
    end
    if Dropdown then
        Dropdown:SetValues(playerNames)
    end
end

game.Players.PlayerAdded:Connect(updatePlayerList)
game.Players.PlayerRemoving:Connect(updatePlayerList)

updatePlayerList()

Toggle:SetValue(false)

local OthersSection = Tabs.AutoFarm:AddSection("Others")

local Toggle = Tabs.AutoFarm:AddToggle("VoidCheckToggle", {
    Title = "Anti Void",
    Default = false
})

local player = game.Players.LocalPlayer
local function onCharacterAdded(character)
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    local safePosition = Vector3.new(-449, -23, -8)  -- PosiÃ§Ã£o segura para onde o jogador serÃ¡ teleportado
    
    local function CheckForVoid()
        if humanoidRootPart.Position.Y < -100 then  -- Y < -100 indica que o jogador estÃ¡ no void
            humanoidRootPart.CFrame = CFrame.new(safePosition)  -- Teleporta o jogador para a posiÃ§Ã£o segura
        end
    end

    Toggle:OnChanged(function()
        if Toggle.Value then
            while Toggle.Value do
                CheckForVoid()
                wait(0.1)  -- Ajuste o tempo conforme necessÃ¡rio
            end
        end
    end)
end

-- Adiciona o ouvinte para o evento de personagem sendo adicionado
player.CharacterAdded:Connect(onCharacterAdded)

-- Se o personagem jÃ¡ estiver carregado, chama a funÃ§Ã£o de verificaÃ§Ã£o diretamente
if player.Character then
    onCharacterAdded(player.Character)
end

Tabs.Misc:AddButton({
    Title = "Rejoin",
    Callback = function()
        local player = game.Players.LocalPlayer
        local function rejoinGame()
            pcall(function()
                game:GetService("TeleportService"):Teleport(game.PlaceId, player)
            end)
        end

        rejoinGame()
    end
})

local Toggle = Tabs.AutoFarm:AddToggle("DeployToggle", {
    Title = "Auto Deploy",
    Default = false
})

Toggle:OnChanged(function()
    while Toggle.Value do
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("game"):WaitForChild("deploy"):InvokeServer()
        wait(1) -- Ajuste o intervalo conforme necessÃ¡rio
    end
end)

SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)
Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 5
})

SaveManager:LoadAutoloadConfig()